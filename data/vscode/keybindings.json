// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+alt+s",
    "command": "editor.action.sortLinesAscending"
  },
  {
    "key": "shift+cmd+[IntlBackslash]",
    "command": "workbench.action.showPreviousWindowTab"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "cmd+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 50
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 50
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+shift+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 1000
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+shift+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 1000
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+k",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 50
    },
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+alt+j",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 50
    },
    "when": "editorTextFocus"
  },
  {
    "key": "shift+ctrl+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+ctrl+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "shift+ctrl+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+o",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "git.openFile",
        "workbench.action.openPreviousRecentlyUsedEditorInGroup",
        "workbench.action.closeActiveEditor"
      ]
    },
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+cmd+o",
    "command": "git.openChange",
    "when": "!isInDiffEditor"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "cmd+d cmd+c",
    "command": "git.clean",
    "when": "workbench.scm.active && !inputFocus"
  },
  {
    "key": "alt+s",
    "command": "git.stage"
  },
  {
    "key": "alt+u",
    "command": "git.unstage"
  },
  {
    "key": "alt+d alt+t",
    "command": "extension.js-debug.createDebuggerTerminal"
  },
  {
    "key": "shift+alt+l",
    "command": "workbench.action.gotoLine",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "alt+g alt+d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+g alt+s",
    "command": "gitlens.views.stageFile"
  },
  {
    "key": "alt+g alt+s",
    "command": "git.stageChange"
  },
  {
    "key": "cmd+r cmd+b",
    "command": "editor.action.resetSuggestSize"
  },
  {
    "key": "cmd+r cmd+b",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "-workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+l alt+e",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+k cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "alt+ctrl+o",
    "command": "workbench.action.navigateBackInEditLocations"
  },
  {
    "key": "alt+ctrl+p",
    "command": "workbench.action.navigateForwardInEditLocations"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.navigateBackInNavigationLocations"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.navigateForwardInNavigationLocations"
  },
  {
    "key": "cmd+r",
    "command": "markdown.preview.refresh"
  },
  {
    "key": "shift+cmd+v",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+cmd+v",
    "command": "markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+alt+n",
    "command": "notifications.toggleList"
  },
  {
    "key": "ctrl+alt+m ctrl+alt+p",
    "command": "merge.goToNextConflict"
  },
  {
    "key": "ctrl+alt+m ctrl+alt+o",
    "command": "merge.goToPreviousConflict"
  },
  {
    "key": "ctrl+alt+m ctrl+alt+l",
    "command": "merge.acceptAllInput1"
  },
  {
    "key": "ctrl+alt+m ctrl+alt+r",
    "command": "merge.acceptAllInput2"
  },
  {
    "key": "alt+cmd+o",
    "command": "merge.openBaseEditor",
    "when": "isInMergeEditor"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.focusNextPart",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "f6",
    "command": "-workbench.action.focusNextPart"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.focusPreviousPart",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "shift+f6",
    "command": "-workbench.action.focusPreviousPart"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+shift+p",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+o",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+o",
    "command": "-editor.action.organizeImports",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "ctrl+alt+tab",
    "command": "editor.action.inlineSuggest.showNext"
  },
  {
    "key": "ctrl+shift+alt+tab",
    "command": "editor.action.inlineSuggest.showPrevious"
  },
  {
    "key": "cmd+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.files.save"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "alt+cmd+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "alt+d alt+r",
    "command": "workbench.debug.viewlet.action.removeBreakpoint"
  },
  {
    "key": "alt+d alt+r",
    "command": "debug.removeBreakpoint"
  },
  {
    "key": "alt+d alt+a",
    "command": "editor.debug.action.conditionalBreakpoint"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "cmd+f",
    "command": "extension.vim_search",
    "when": "editorTextFocus && vim.mode == 'Visual'"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "alt+cmd+up",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+8",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+9",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus || suggestWidgetVisible && !inputFocus"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+cmd+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+cmd+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "shift+alt+cmd+h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "notebook.cell.focusOutOutput",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.focusPreviousPart",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "notebook.focusNextEditor",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.focusNextPart",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+a",
    "command": "-keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+a",
    "command": "keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "alt+n alt+c",
    "command": "notifications.clearAll"
  },
  {
    "key": "cmd+l",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "escape",
    "command": "-extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "shift+space",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups && !terminalFocus && !terminalEditorFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "activeEditor && !terminalFocus && !terminalEditorFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+alt+cmd+7",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "g g",
    "command": "-list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "shift+alt+t",
    "command": "extension.multiCommand.execute",
    "args": {
      "command": "multiCommand.closeOtherTabs"
    },
  },
  {
    "key": "cmd+alt+t",
    "command": "extension.multiCommand.execute",
    "args": {
      "command": "multiCommand.closeOtherGroups"
    },
  },
  {
    "key": "cmd+c",
    "command": "inlineChat.discardToClipboard",
    "when": "inlineChatFocused && inlineChatVisible"
  },
  {
    "command": "-workbench.action.togglePanel",
    "key": "cmd+j",
  },
  {
    "command": "breadcrumbs.selectFocused",
    "key": "cmd+j",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "history.showNext",
    "key": "cmd+j",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
  },
  {
    "command": "history.showPrevious",
    "key": "cmd+k",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
  },
  {
    "command": "interactive.history.next",
    "key": "cmd+j",
    "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "command": "interactive.history.previous",
    "key": "cmd+k",
    "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "command": "list.collapse",
    "key": "cmd+k",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "command": "list.select",
    "key": "cmd+j",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "notifications.focusNextToast",
    "key": "cmd+j",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusPreviousToast",
    "key": "cmd+k",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "scm.viewNextCommit",
    "key": "cmd+j",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "search.action.openResult",
    "key": "cmd+j",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "search.focus.nextInputBox",
    "key": "cmd+j",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "command": "search.focus.previousInputBox",
    "key": "cmd+k",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "command": "selectNextCodeAction",
    "key": "cmd+j",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "cmd+k",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "settings.action.focusSettingsFile",
    "key": "cmd+j",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "settings.action.focusSettingsFromSearch",
    "key": "cmd+j",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "showNextParameterHint",
    "key": "cmd+j",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "showPrevParameterHint",
    "key": "cmd+k",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "toggleSuggestionFocus",
    "key": "cmd+j",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "toggleSuggestionFocus",
    "key": "cmd+K",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "widgetNavigation.focusNext",
    "key": "cmd+j",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "command": "widgetNavigation.focusPrevious",
    "key": "cmd+k",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
  },
  {
    "command": "workbench.action.interactivePlayground.arrowDown",
    "key": "cmd+j",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.interactivePlayground.arrowUp",
    "key": "cmd+k",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "cmd+j",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "cmd+k",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.terminal.navigationModeFocusNext",
    "key": "cmd+j",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.navigationModeFocusPrev",
    "key": "cmd+k",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.selectNextSuggestion",
    "key": "cmd+j",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "key": "cmd+k",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.banner.focusNextAction",
    "key": "cmd+j",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.banner.focusPreviousAction",
    "key": "cmd+k",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.statusBar.focusNext",
    "key": "cmd+j",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusPrevious",
    "key": "cmd+k",
    "when": "statusBarFocused"
  },
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "cmd+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "cmd+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus || suggestWidgetVisible && !inputFocus"
  },
  {
    "key": "cmd+k",
    "command": "inlineChat.previousFromHistory",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorStart"
  },
  {
    "key": "cmd+j",
    "command": "inlineChat.nextFromHistory",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorEnd"
  },
  {
    "key": "shift+cmd+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "shift+alt+cmd+j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "shift+alt+cmd+l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "shift+alt+cmd+h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "shift+alt+cmd+n",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "shift+alt+cmd+p",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "alt+cmd+h",
    "command": "workbench.action.previousEditorInGroup",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+k alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+cmd+l",
    "command": "workbench.action.nextEditorInGroup",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+alt+cmd+m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "maximizedEditorGroup || multipleEditorGroups"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "maximizedEditorGroup || multipleEditorGroups"
  },
  {
    "key": "alt+[Equal]",
    "command": "workbench.action.quickSwitchWindow"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+tab",
    "command": "github.copilot.nextPanelSolution"
  },
  {
    "key": "shift+alt+space",
    "command": "editor.action.inlineSuggest.trigger"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "shift+alt+s",
    "command": "workbench.action.showAllSymbols",
    "when": "!editorHasSelection"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "alt+g alt+s",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "f7",
    "command": "-editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+alt+g shift+alt+s",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+g alt+r",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "ctrl+shift+alt+[Equal]",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "alt+g alt+t",
    "command": "editor.action.goToTypeDefinition"
  },
  {
    "key": "alt+g alt+l",
    "command": "editor.action.openLink"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "chatIsEnabled"
  },
  {
    "key": "shift+cmd+i",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+f",
    "command": "editor.fold"
  },
  {
    "key": "alt+cmd+u",
    "command": "editor.unfold"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "key": "shift+cmd+i",
    "command": "-workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  }
]
